{"version":3,"sources":["paging.js"],"names":["showPager","pages","$pagination","$","removeClass","hasClass","addClass","pagingOpts","format","perpage","lapping","page","onSelect","onFormat","type","this","value","active"],"mappings":"AAOA,YAyDA,SAASA,WAAUC,GACf,GAAIC,GAAcC,EAAE,cAChBF,GAAQ,EACRC,EAAYE,YAAY,UAEnBF,EAAYG,SAAS,WACtBH,EAAYI,SAAS,UA/DjC,GAAIC,aACAC,OAAQ,cACRC,QAAS,GACTC,QAAS,EACTC,KAAM,EACNC,SAAU,SAAUD,GAChBX,aAEJa,SAAU,SAAUC,GAChB,OAAQA,GACJ,IAAK,QACD,MAAIC,MAAKJ,OAASI,KAAKC,MACZ,kCACcD,KAAKC,MAAQ,YAG3B,mBACcD,KAAKC,MAAQ,WAG1C,KAAK,OACD,MAAID,MAAKE,OACE,qFAIA,qGAIf,KAAK,OACD,MAAIF,MAAKE,OACE,yFAIA,yGAIf,KAAK,QACD,MAAIF,MAAKE,OACE,iCAEA,iDAEf,KAAK,OACD,MAAIF,MAAKE,OACE,gCAEA","file":"paging.js","sourcesContent":["/* This is the custom pagination settings shared throughout the site.\n * This script should be loaded before page-specific code that\n * overrides settings further.\n * https://github.com/infusion/jQuery-Paging\n */\n\n// Default paging options to be overridden later\nvar pagingOpts = {\n    format: '[< nncnn >]', // define how the navigation should look like and in which order onFormat() gets called\n    perpage: 20, // elements per page\n    lapping: 0, // don't overlap pages for the moment\n    page: 1, // start at page, can also be \"null\" or negative\n    onSelect: function (page) {\n        showPager();\n    },\n    onFormat: function (type) {\n        switch (type) {\n            case 'block': // n and c\n                if (this.page === this.value) {\n                    return '<li class=\"active\">' +\n                        '<a href=\"#\">' + this.value + '</a>' +\n                        '</li>';\n                } else {\n                    return '<li>' +\n                        '<a href=\"#\">' + this.value + '</a>' +\n                        '</li>';\n                }\n            case 'next': // >\n                if (this.active) {\n                    return '<li><a href=\"#\" aria-label=\"Next\">' +\n                        '<span aria-hidden=\"true\">&raquo;</span>' +\n                        '</a></li>';\n                } else {\n                    return '<li class=\"disabled\"><a href=\"#\" aria-label=\"Next\">' +\n                        '<span aria-hidden=\"true\">&raquo;</span>' +\n                        '</a></li>';\n                }\n            case 'prev': // <\n                if (this.active) {\n                    return '<li><a href=\"#\" aria-label=\"Previous\">' +\n                        '<span aria-hidden=\"true\">&laquo;</span>' +\n                        '</a></li>';\n                } else {\n                    return '<li class=\"disabled\"><a href=\"#\" aria-label=\"Previous\">' +\n                        '<span aria-hidden=\"true\">&laquo;</span>' +\n                        '</a></li>';\n                }\n            case 'first': // [\n                if (this.active) {\n                    return '<li><a href=\"#\">first</a></li>';\n                } else {\n                    return '<li class=\"disabled\"><a href=\"#\">first</a></li>';\n                }\n            case 'last': // ]\n                if (this.active) {\n                    return '<li><a href=\"#\">last</a></li>';\n                } else {\n                    return '<li class=\"disabled\"><a href=\"#\">last</a></li>';\n                }\n        }\n    }\n};\n\n// Function used in onSelect to reveal pager\nfunction showPager(pages) {\n    var $pagination = $('.pagination');\n    if (pages > 1) {\n        $pagination.removeClass('hidden');\n    } else {\n        if (!$pagination.hasClass('hidden')) {\n            $pagination.addClass('hidden');\n        }\n    }\n}"],"sourceRoot":"/source/"}