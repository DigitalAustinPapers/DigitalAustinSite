{"version":3,"sources":["browse.js"],"names":["expandAll","button","html","attr","$","find","each","this","collapse","addClass","removeClass","collapseAll","updatePage","listId","pagedElements","pageSlice","newPage","slice","empty","append","on","e","document","hasClass","jumpMap","count","$prev","$curr","css","$paging","setPage","Math","ceil","length","slideDown","$listId","$categorizedResults","pagingOpts","page","showPager","pages","paging","totalHeadings","setOptions","onSelect"],"mappings":"AAIA,YAAA,SAASA,WAAUC,GACfA,EAAOC,KAAK,gBAAgBC,KAAK,aAAc,YAC/CC,EAAE,mBAAmBC,KAAK,aAAaC,KAAK,WACxCF,EAAEG,MAAMC,SAAS,QACjBJ,EAAE,mBAAmBC,KAAK,YAAYI,SAAS,YAAYC,YAAY,aAI/E,QAASC,aAAYV,GACjBA,EAAOC,KAAK,cAAcC,KAAK,aAAc,aAC7CC,EAAE,mBAAmBC,KAAK,aAAaC,KAAK,WACxCF,EAAEG,MAAMC,SAAS,QACjBJ,EAAE,mBAAmBC,KAAK,aAAaI,SAAS,WAAWC,YAAY,cA0E/E,QAASE,YAAWC,EAAQC,EAAeC,GAOvC,GAAIC,GAAUF,EAAcG,MAAMF,EAAU,GAAIA,EAAU,GAC1DJ,aAAYP,EAAE,yBAEdS,EAAOK,QACPL,EAAOM,OAAOH,GAhFlBZ,EAAE,wBAAwBgB,GAAG,QAAS,SAASC,GACV,aAA9BjB,EAAEG,MAAMJ,KAAK,cACZH,UAAUI,EAAEG,OACwB,YAA9BH,EAAEG,MAAMJ,KAAK,eACnBQ,YAAYP,EAAEG,SAItBH,EAAEkB,UAAUF,GAAG,QAAS,oCAAqC,WACtDhB,EAAEG,MAAMF,KAAK,OAAOkB,SAAS,WAC5BnB,EAAEG,MAAMF,KAAK,OAAOI,SAAS,YAAYC,YAAY,WAC/CN,EAAEG,MAAMF,KAAK,OAAOkB,SAAS,aACnCnB,EAAEG,MAAMF,KAAK,OAAOI,SAAS,WAAWC,YAAY,aAU5D,IAAIc,YACAC,MAAQ,EACRC,MACAC,KAEJvB,GAAE,0BAA0BE,KAAK,WAC7BqB,MAAQvB,EAAEG,MAAMJ,KAAK,oBACrBsB,OAAS,EACLE,OAASD,QACTF,QAAQG,OAASF,OAErBC,MAAQC,QAGZvB,EAAE,mBAAmBE,KAAK,WAChBF,EAAEG,MAAMJ,KAAK,qBAAuBqB,UACtCpB,EAAEG,MAAMqB,IAAI,UAAW,UAE5BR,GAAG,QAAS,WAIX,MAHAS,SAAQC,QAAQC,KAAKC,KAAKR,QAAQpB,EAAEG,MAAMJ,KAAK,qBAAuBC,EAAE,0BAA0B6B,SAClG7B,EAAE,aAAaC,KAAK,WAAWK,YAAY,UAC3CN,EAAEG,MAAME,SAAS,WACV,IAGXL,EAAE,aAAa8B,UAAU,IAOzB,IAAIC,SAAU/B,EAAE,mBAEZgC,oBAAsBD,QAAQ9B,KAAK,OAEvCgC,YAAqB,SAAI,SAASC,GAC9B1B,WAAWuB,QAASC,oBAAqB7B,KAAKU,OAC9CsB,UAAUhC,KAAKiC,OAGnB,IAAIX,SAAUzB,EAAE,eAAeqC,OAAOC,cAAeL,WACrDR,SAAQc,YAAYC,SAAU,SAASN,GACnC1B,WAAWuB,QAASC,oBAAqB7B,KAAKU,OAC9CsB,UAAUhC,KAAKiC","file":"browse.js","sourcesContent":["/*\n * Toggle collapsing elements in results\n */\n\nfunction expandAll(button) {\n    button.html('Collapse all').attr('data-state', 'expanded');\n    $('#browse-results').find('.collapse').each(function() {\n        $(this).collapse('show');\n        $('#browse-results').find('.fa-plus').addClass('fa-minus').removeClass('fa-plus');\n    });\n}\n\nfunction collapseAll(button) {\n    button.html('Expand all').attr('data-state', 'collapsed');\n    $('#browse-results').find('.collapse').each(function() {\n        $(this).collapse('hide');\n        $('#browse-results').find('.fa-minus').addClass('fa-plus').removeClass('fa-minus');\n    });\n}\n\n// Expand and collapse all nodes and update expand/collapse button\n$('#collapse-expand-all').on('click', function(e) {\n    if($(this).attr('data-state') == 'collapsed') {\n        expandAll($(this));\n    } else if($(this).attr('data-state') == 'expanded') {\n        collapseAll($(this));\n    }\n});\n\n$(document).on('click', '.browse-list__category-header > a', function() {\n    if($(this).find('.fa').hasClass('fa-plus')) {\n        $(this).find('.fa').addClass('fa-minus').removeClass('fa-plus');\n    } else if($(this).find('.fa').hasClass('fa-minus')) {\n        $(this).find('.fa').addClass('fa-plus').removeClass('fa-minus');\n    }\n});\n\n\n/*\n * Jumplist\n */\n\n//\nvar jumpMap = {},\n    count = 0,\n    $prev,\n    $curr;\n\n$('.browse-list__category').each(function() {\n    $curr = $(this).attr('data-sort-letter');\n    count += 1;\n    if ($curr != $prev) {\n        jumpMap[$curr] = count;\n    }\n    $prev = $curr;\n});\n\n$('.jumplist__item').each(function() {\n    if (!($(this).attr('data-sort-letter') in jumpMap)) {\n        $(this).css('display', 'none');\n    }\n}).on('click', function() {\n    $paging.setPage(Math.ceil(jumpMap[$(this).attr('data-sort-letter')] / $('.browse-list__category').length));\n    $('.jumplist').find('.active').removeClass('active');\n    $(this).addClass('active');\n    return false;\n});\n\n$('.jumplist').slideDown(500);\n\n/*\n * Pagination\n */\n\n// Selector for list to be populated with paginated results\nvar $listId = $('#browse-results');\n// Selector for list content to be paginated\nvar $categorizedResults = $listId.find('> li');\n\npagingOpts['onSelect'] = function(page) {\n    updatePage($listId, $categorizedResults, this.slice);\n    showPager(this.pages);\n};\n\nvar $paging = $(\".pagination\").paging(totalHeadings, pagingOpts);\n$paging.setOptions({onSelect: function(page) {\n    updatePage($listId, $categorizedResults, this.slice);\n    showPager(this.pages);\n}});\n\nfunction updatePage(listId, pagedElements, pageSlice) {\n    /* Updates the current page when a page button is clicked\n     * @param {object} listId A jQuery object of the list to paginate\n     * @param {object} pagedElements A jQuery object of the items to paginate within listId\n     * @param {array} pageSlice This is an array with 2 values:\n     *     The start and end values to slice the page\n     */\n    var newPage = pagedElements.slice(pageSlice[0], pageSlice[1]);\n    collapseAll($('#collapse-expand-all'));\n\n    listId.empty();\n    listId.append(newPage);\n}"],"sourceRoot":"/source/"}